import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–æ–≤ ---
logging.basicConfig(level=logging.INFO)

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
BOT_TOKEN = os.getenv("BOT_TOKEN", "8248333706:AAEwKH69lYXXmqXuF_PuaPO-rwbBhaei510")
ADMIN_ID = os.getenv("ADMIN_ID", "6563977013")
PARTNER_LINK = os.getenv("PARTNER_LINK", "https://partner-link.com")

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞ ---
if not BOT_TOKEN:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN. –î–æ–±–∞–≤—å –µ–≥–æ –≤ Render ‚Üí Environment Variables.")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# --- –ê–Ω–∫–µ—Ç—ã ---
profiles = [
    {"name": "–û–ª—å–≥–∞, 34", "bio": "–°–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è. –ò—â—É –∑–∞–±–æ—Ç–ª–∏–≤–æ–≥–æ –º—É–∂—á–∏–Ω—É ‚ù§Ô∏è"},
    {"name": "–ú–∞—Ä–∏–Ω–∞, 41", "bio": "–•–æ—á—É –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –ª—é–±–ª—é –≥–æ—Ç–æ–≤–∏—Ç—å –∏ —É—é—Ç üè°"},
    {"name": "–¢–∞—Ç—å—è–Ω–∞, 29", "bio": "–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è ‚úàÔ∏è –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫—É üåπ"},
    {"name": "–ê–Ω–Ω–∞, 37", "bio": "–î–µ—Ç–µ–π –Ω–µ—Ç, —Ö–æ—á—É –ª—é–±–≤–∏ üíï"},
    {"name": "–ò—Ä–∏–Ω–∞, 45", "bio": "–°–∫—É—á–Ω–æ –æ–¥–Ω–æ–π... –ü–∏—à–∏! üòâ"},
    {"name": "–ù–∞—Ç–∞–ª—å—è, 32", "bio": "–ó–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º, –∏—â—É –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º—É–∂—á–∏–Ω—É üèÉ‚Äç‚ôÇÔ∏è"},
    {"name": "–ï–ª–µ–Ω–∞, 39", "bio": "–°–µ—Ä—å–µ–∑–Ω–∞—è, —Å–µ–º–µ–π–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞–∂–Ω—ã ‚ù§Ô∏è"},
    {"name": "–ê–ª—ë–Ω–∞, 28", "bio": "–Ø—Ä–∫–∞—è, –≤–µ—Å–µ–ª–∞—è, –ª—é–±–ª—é —Å—é—Ä–ø—Ä–∏–∑—ã üéÅ"},
    {"name": "–°–≤–µ—Ç–ª–∞–Ω–∞, 49", "bio": "–•–æ—á—É –Ω–∞–π—Ç–∏ –≤–µ—Ä–Ω–æ–≥–æ —Å–ø—É—Ç–Ω–∏–∫–∞ –∂–∏–∑–Ω–∏ üíç"},
    {"name": "–í–µ—Ä–∞, 33", "bio": "–õ—é–±–ª—é –∂–∏–≤–æ—Ç–Ω—ã—Ö üê∂ –∏ —É—é—Ç–Ω—ã–µ –≤–µ—á–µ—Ä–∞ ‚òï"},
]

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –°–º–æ—Ç—Ä–∏ –∞–Ω–∫–µ—Ç—ã –∏ –∑–Ω–∞–∫–æ–º—å—Å—è!")
    for p in profiles:
        text = f"üë© {p['name']}\n{p['bio']}\n‚û°Ô∏è [–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—É]({PARTNER_LINK})"
        await message.answer(text, parse_mode="Markdown")

# --- –ö–æ–º–∞–Ω–¥–∞ /broadcast (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞) ---
@dp.message_handler(commands=['broadcast'])
async def broadcast(message: types.Message):
    if str(message.from_user.id) != ADMIN_ID:
        return await message.reply("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.")
    text = message.text.replace("/broadcast", "").strip()
    if not text:
        return await message.reply("‚ùó –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.")
    # –¢—É—Ç –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–Ω—É–∂–Ω–∞ –±–∞–∑–∞)
    await message.reply(f"üì¢ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {text}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
